TOKEN "read" READ
TOKEN "active_app_by_day_endpoint_read_5384" READ

NODE active_app_by_day_0
SQL >
    %
    select toDate(timestamp) date, sum(duration) duration, if(app == 'Electron', 'VSCode', app) app
    from events
    where
        user = 'alrocar' and app is not null
        {% if defined(days) %}
            and timestamp >= now() - interval {{ Int8(days, 5) }} day
            and dayOfWeek(timestamp) not in (6, 7)
        {% else %} and timestamp >= toMonday(now()) and dayOfWeek(timestamp) not in (6, 7)
        {% end %} and status = 'unlocked' and app != 'Arc' and app not like '%Chrome%'
    group by app, date
    order by app, date
    -- order by duration desc
    with fill INTERPOLATE(duration AS 0)

NODE dates
SQL >
    %
    select date, arrayJoin(apps) app, duration
    from
        (
            with
                (
                    select min(toDate(timestamp))
                    from events
                    where
                        user = 'alrocar' and app is not null
                        {% if defined(days) %}
                            and timestamp >= now() - interval {{ Int8(days, 5) }} day
                            and dayOfWeek(timestamp) not in (6, 7)
                        {% else %}
                            and timestamp >= toMonday(now()) and dayOfWeek(timestamp) not in (6, 7)
                        {% end %} and status = 'unlocked'
                ) as start,
                (
                    select max(toDate(timestamp))
                    from events
                    where
                        user = 'alrocar' and app is not null
                        {% if defined(days) %}
                            and timestamp >= now() - interval {{ Int8(days, 5) }} day
                            and dayOfWeek(timestamp) not in (6, 7)
                        {% else %}
                            and timestamp >= toMonday(now()) and dayOfWeek(timestamp) not in (6, 7)
                        {% end %} and status = 'unlocked'
                ) as end,
                (
                    select groupArray(distinct(if(app == 'Electron', 'VSCode', app))) apps
                    from events
                    where
                        user = 'alrocar' and app is not null
                        {% if defined(days) %}
                            and timestamp >= now() - interval {{ Int8(days, 5) }} day
                            and dayOfWeek(timestamp) not in (6, 7)
                        {% else %}
                            and timestamp >= toMonday(now()) and dayOfWeek(timestamp) not in (6, 7)
                        {% end %} and status = 'unlocked'
                ) as apps
            SELECT assumeNotNull(arrayJoin([start, end])) AS date, apps, 0 as duration
            order by date asc
            with fill interpolate(apps)
        )

NODE active_app_by_day_2a
SQL >
    %
    select d.date, d.app, d.duration + b.duration / 60 / 60 duration
    from dates d
    left join active_app_by_day_0 as b using date, app
    order by date asc, duration desc

NODE active_app_by_day_2b
SQL >
    SELECT groupArray(date) date, groupArray(round(duration, 2)) data, app name
    FROM active_app_by_day_2a
    group by name

NODE active_app_by_day_4
SQL >
    %
    SELECT *
    FROM active_app_by_day_2b
    where not arrayAll(x -> x == 0, data) and arrayCount(x -> x > 0.2, data) > 0
    order by arraySum(data) desc
    limit {{ Int8(limit, 3) }} by date
